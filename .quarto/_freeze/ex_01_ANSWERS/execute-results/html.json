{
  "hash": "0a1670f5cabad0bcf0a58c1065db5ec1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exercise 1. Your turn\"\noutput: html_notebook\n---\n\n\n## Load library packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(janeaustenr)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'dplyr' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'stringr' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidytext)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'tidytext' was built under R version 4.3.2\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(wordcloud2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'wordcloud2' was built under R version 4.3.2\n```\n\n\n:::\n:::\n\n\n## Your Turn. Exercise 1.\n\nGoal: Make a basic word cloud for the novel, *Pride and Predjudice*, `pride_prej_novel`\n\na.  Prepare\n\n\n::: {.cell}\n\n```{.r .cell-code}\npride_prej_novel <-  tibble(text = prideprejudice) %>%\n  mutate(line = row_number())\n```\n:::\n\n\nb.  Tokenize `sense_novel` with `unnest_tokens()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\npride_prej_novel %>% \n  unnest_tokens(word, text)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 122,204 × 2\n    line word     \n   <int> <chr>    \n 1     1 pride    \n 2     1 and      \n 3     1 prejudice\n 4     3 by       \n 5     3 jane     \n 6     3 austen   \n 7     7 chapter  \n 8     7 1        \n 9    10 it       \n10    10 is       \n# ℹ 122,194 more rows\n```\n\n\n:::\n:::\n\n\nc.  Remove stop-words\n\n\n::: {.cell}\n\n```{.r .cell-code}\npride_prej_novel %>% \n  unnest_tokens(word, text) %>% \n  anti_join(get_stopwords())\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(word)`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 54,831 × 2\n    line word        \n   <int> <chr>       \n 1     1 pride       \n 2     1 prejudice   \n 3     3 jane        \n 4     3 austen      \n 5     7 chapter     \n 6     7 1           \n 7    10 truth       \n 8    10 universally \n 9    10 acknowledged\n10    10 single      \n# ℹ 54,821 more rows\n```\n\n\n:::\n:::\n\n\nd.  calculate word fequency\n\n\n::: {.cell}\n\n```{.r .cell-code}\npride_prej_novel %>% \n  unnest_tokens(word, text) %>% \n  anti_join(get_stopwords()) %>% \n  count(word, sort = TRUE) \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(word)`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6,404 × 2\n   word          n\n   <chr>     <int>\n 1 mr          785\n 2 elizabeth   597\n 3 said        401\n 4 darcy       373\n 5 mrs         343\n 6 much        326\n 7 must        305\n 8 bennet      294\n 9 miss        283\n10 jane        264\n# ℹ 6,394 more rows\n```\n\n\n:::\n:::\n\n\ne.  make a simple wordcloud\n\n\n::: {.cell}\n\n```{.r .cell-code}\npride_prej_novel %>% \n  unnest_tokens(word, text) %>% \n  anti_join(get_stopwords()) %>% \n  count(word, sort = TRUE) %>% \n  with(wordcloud::wordcloud(word, n, max.words = 100))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(word)`\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ex_01_ANSWERS_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nf.  Since \"Friends don't let friends make word clouds\", make a barplot of the word frequency.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npride_prej_novel %>% \n  unnest_tokens(word, text) %>% \n  anti_join(get_stopwords(), by = \"word\") %>% \n  count(word, sort = TRUE) %>% \n  slice_head(n = 10) %>% \n  ggplot(aes(x = n, y = fct_reorder(word, n))) +\n  geom_col() +\n  labs(title = \"Word Frequency\",\n       subtitle = \"Jane Austen novel\",\n       x = \"\", y = \"\",\n       caption = \"Source: janeaustenr\")\n```\n\n::: {.cell-output-display}\n![](ex_01_ANSWERS_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "ex_01_ANSWERS_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}